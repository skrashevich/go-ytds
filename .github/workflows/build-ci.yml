name: Nightly Release

on:
  workflow_dispatch:
  
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        env:
          GOOS: ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'darwin' || 'windows' }}
          CGO_ENABLED: ${{ matrix.os != 'macos-latest' }}
        run: |
          mkdir -p dist
          go build -ldflags "-s -w" -o dist/go-ytds_${{ matrix.os }} ./main.go

      - name: Archive binaries
        if: always()
        run: |
          mkdir -p dist/archives
          tar -czvf dist/archives/go-ytds_${{ matrix.os }}.tar.gz -C dist go-ytds_${{ matrix.os }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: go-ytds_${{ matrix.os }}
          path: dist/archives/go-ytds_${{ matrix.os }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist/archives

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/archives/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}